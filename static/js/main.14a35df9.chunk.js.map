{"version":3,"sources":["components/Form/Form.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js"],"names":["module","exports","ContactForm","onLocalStorageChange","useState","name","setName","number","setNumber","handleOnChange","e","target","type","value","onSubmit","arr","JSON","parse","window","localStorage","getItem","some","contact","uName","alert","uNumber","setItem","stringify","concat","id","uuid","preventDefault","className","s","form","label","input","onChange","pattern","title","required","btn","Filter","filter","onFilterChange","ContactsList","localStorageState","contacts","setContacts","useEffect","toLowerCase","includes","list","length","map","list_item","href","onClick","onDelete","App","setFilter","setLocalStorageState","pre","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14a35df9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3_5Ce\",\"label\":\"Form_label__20OJs\",\"input\":\"Form_input__3RfAq\",\"btn\":\"Form_btn__JF3_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3ciVI\",\"list_item\":\"ContactsList_list_item__17UdA\",\"btn\":\"ContactsList_btn__5ASsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1JXxx\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuid } from 'uuid';\nimport s from \"./Form.module.css\";\n\nexport default function ContactForm({onLocalStorageChange}) {\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleOnChange = (e) => {\n    const { type, value } = e.target;\n    switch(type) {\n      case 'text':\n        setName(value);\n        break;\n      case 'tel':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onSubmit = (e) => {\n    const arr = JSON.parse(window.localStorage.getItem('contacts')) || [];\n    if (arr.some(contact => contact.uName === name)) {\n      alert(`${name} is already in your phonebook.`)\n      return;\n    } else if (arr.some(contact => contact.uNumber === number)) {\n      alert(`Person with number ${number} is already in your phonebook.`)\n      return;\n    }\n    window.localStorage.setItem('contacts', JSON.stringify(arr.concat([{ id: uuid(), uName: name, uNumber: number }])));\n    setName('');\n    setNumber('');\n    e.preventDefault();\n    onLocalStorageChange();\n  };\n\n\n      return (\n      <div>\n          <form onSubmit={onSubmit} className={s.form}>\n          <label className={s.label}>\n            Name &nbsp;&nbsp;&nbsp;\n            <input\n              className={s.input}\n              type=\"text\"\n              onChange={handleOnChange}\n              value={name}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n            </label>\n    \n          <label className={s.label}>\n            Number &nbsp;\n            <input\n              className={s.input}\n              type=\"tel\"\n              onChange={handleOnChange}\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n            </label>\n\n            <button className={s.btn} type=\"onSubmit\">\n              Add contact\n            </button>\n          </form>\n      </div>\n      \n    );\n\n}\n\n\nContactForm.propTypes = {\n  onLocalStorageChange: PropTypes.func.isRequired,\n};","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter({filter, onFilterChange}) {\n  return (\n\n      <label>Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={onFilterChange}\n        ></input>\n        </label>\n\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\n\n\nexport default function ContactsList({ filter, localStorageState, onLocalStorageChange  }) {\n  \n  const [contacts, setContacts] = useState([]);\n  \n  useEffect(() => {\n    const arr = JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n    setContacts(arr.filter(contact => contact.uName.toLowerCase().includes(filter.toLowerCase()))); \n  }, [filter, localStorageState])\n  \n\n  const onDelete = (id) => {\n    const arr = JSON.parse(window.localStorage.getItem('contacts')).filter(contact => contact.id !== id);\n    window.localStorage.setItem('contacts', JSON.stringify(arr));\n    onLocalStorageChange();\n  };\n  \n\n  return (\n    <ul className={s.list}>\n      {contacts.length === 0 ? <h6>Contacts list is empty.</h6> : <h6>Contacts list:</h6>}\n        {contacts.map(({id, uName, uNumber}) => (\n          <li\n            key={id}\n            className={s.list_item}\n          >\n\n            <a href={\"tel:\"+{ uNumber }}>\n              <span>{uName}&nbsp;:</span>\n              <span>{uNumber}</span>\n            </a>\n\n            <button\n              type=\"button\"\n              className={s.btn}\n              onClick={() => onDelete(id)}\n            >\n              <span className=\"material-icons\">delete</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n  );\n}\n\nContactsList.propTypes = {\n  filter: PropTypes.PropTypes.string.isRequired,\n  localStorageState: PropTypes.bool.isRequired,\n  onLocalStorageChange: PropTypes.func.isRequired,\n};\n\n\n","import React from 'react';\nimport { useState } from 'react';\nimport ContactForm from './components/Form/Form.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport ContactsList from './components/ContactsList/ContactsList.jsx';\nimport './App.css';\n\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  const [localStorageState, setLocalStorageState] = useState(true);\n\n  const onFilterChange = e => setFilter(e.currentTarget.value);\n\n  const onLocalStorageChange = () => {\n    setLocalStorageState(pre => !pre);\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <Filter filter={filter} onFilterChange={onFilterChange} />\n\n      <ContactForm onLocalStorageChange={onLocalStorageChange} />\n\n      <ContactsList\n        filter={filter}\n        localStorageState={localStorageState}\n        onLocalStorageChange={onLocalStorageChange}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}